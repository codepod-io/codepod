# service account for API
# This allow api-account to create/delete resources in codepod-runtime namespace.

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-account

# Runtime spawner in a seperate namespace codepod-runtime
# Ref: https://stackoverflow.com/questions/53960516/can-i-connect-one-service-account-to-multiple-namespaces-in-kubernetes

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: codepod-runtime
  name: runtime-spawner
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list", "create", "update", "patch", "delete"]
- apiGroups: ["apps"] # "" indicates the core API group
  resources: ["deployments"]
  verbs: ["get", "watch", "list", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]


---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: spawn-runtimes
  namespace: codepod-runtime
subjects:
# You can specify more than one "subject"
- kind: ServiceAccount
  name: api-account # "name" is case sensitive
  # apiGroup: rbac.authorization.k8s.io
  # This should be optional if I'm already in this namespace.
  # CAUTION: Well, this is not optional.
  namespace: codepod-staging
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: runtime-spawner # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io


# In the local namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: localns-runtime-spawner
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: localns-spawn-runtimes
subjects:
# You can specify more than one "subject"
- kind: ServiceAccount
  name: api-account # "name" is case sensitive
  # apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: localns-runtime-spawner # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
