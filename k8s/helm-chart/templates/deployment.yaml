# UI

apiVersion: apps/v1
kind: Deployment
metadata:
  name: codepod-ui-deployment
  labels:
    app: codepod-ui
spec:
  replicas: 3
  selector:
    matchLabels:
      app: codepod-ui
  template:
    metadata:
      labels:
        app: codepod-ui
    spec:
      containers:
        - name: codepod-ui
          image: lihebi/codepod-ui:{{ .Chart.AppVersion }}
          env:
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: myconfig
                  key: GOOGLE_CLIENT_ID
          ports:
            - containerPort: 80
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"

---
apiVersion: v1
kind: Service
metadata:
  name: codepod-ui-service
spec:
  selector:
    app: codepod-ui
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

# API
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: codepod-api-deployment
  labels:
    app: codepod-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: codepod-api
  template:
    metadata:
      labels:
        app: codepod-api
    spec:
      serviceAccountName: api-account
      containers:
        - name: codepod-api
          image: lihebi/codepod-api:{{ .Chart.AppVersion }}
          ports:
            - containerPort: 4000
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: myconfig
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: myconfig
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: myconfig
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: myconfig
                  key: POSTGRES_PORT
            - name: DATABASE_URL
              value:  "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)?sslmode=require"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: JWT_SECRET
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: myconfig
                  key: GOOGLE_CLIENT_ID
            - name: PROXY_API_URL
              value: "http://codepod-proxy-service:4011/graphql"
            - name: ZMQ_KERNEL_IMAGE
              value: lihebi/codepod-kernel-python:{{ .Chart.AppVersion }}
            - name: WS_RUNTIME_IMAGE
              value: lihebi/codepod-runtime:{{ .Chart.AppVersion }}
            - name: RUNTIME_SPAWNER
              value: k8s
            - name: RUNTIME_NS
              value: {{ .Release.Namespace }}-runtime
            - name: KERNEL_TTL
              # 1000 * 60 * 60 * 12: 12 hours
              value: "43200000"
              # 1000 * 60 * 3: 3 minutes
              # value: "180000"
            - name: LOOP_INTERVAL
              # 1000 * 60 * 1: 1 minute
              value: "60000"
              # 1000 * 5: 5 seconds
              # value: "5000"
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"

---
apiVersion: v1
kind: Service
metadata:
  name: codepod-api-service
spec:
  selector:
    app: codepod-api
  ports:
    - protocol: TCP
      port: 4000
      targetPort: 4000

# prisma
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prisma-deployment
  labels:
    app: prisma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prisma
  template:
    metadata:
      labels:
        app: prisma
    spec:
      serviceAccountName: api-account
      containers:
        - name: prisma
          image: lihebi/codepod-api:{{ .Chart.AppVersion }}
          command: ["npx", "prisma", "studio"]
          ports:
            - containerPort: 5555
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: myconfig
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: myconfig
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: myconfig
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: myconfig
                  key: POSTGRES_PORT
            - name: DATABASE_URL
              value:  "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)?sslmode=require"
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"

---
apiVersion: v1
kind: Service
metadata:
  name: prisma-service
spec:
  selector:
    app: prisma
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5555

# Proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: codepod-proxy-deployment
  labels:
    app: codepod-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codepod-proxy
  template:
    metadata:
      labels:
        app: codepod-proxy
    spec:
      containers:
        - name: codepod-proxy
          image: lihebi/codepod-proxy:{{ .Chart.AppVersion }}
          ports:
            - containerPort: 4010
            - containerPort: 4011
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"

---
apiVersion: v1
kind: Service
metadata:
  name: codepod-proxy-service
spec:
  selector:
    app: codepod-proxy
  ports:
    - name: proxy-port
      protocol: TCP
      port: 4010
      targetPort: 4010
    - name: api-port
      protocol: TCP
      port: 4011
      targetPort: 4011

# Socket
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: codepod-socket-deployment
  labels:
    app: codepod-socket
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codepod-socket
  template:
    metadata:
      labels:
        app: codepod-socket
    spec:
      containers:
        - name: codepod-socket
          image: node:18
          command: ["/bin/sh", "-c", "yarn add yjs y-websocket && HOST=0.0.0.0 PORT=4233 npx y-websocket"]
          ports:
            - containerPort: 4233
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"

---
apiVersion: v1
kind: Service
metadata:
  name: codepod-socket-service
spec:
  selector:
    app: codepod-socket
  ports:
    - protocol: TCP
      port: 4233
      targetPort: 4233


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-runtime-deployment
  labels:
    app: example-runtime
spec:
  replicas: 3
  selector:
    matchLabels:
      app: example-runtime
  template:
    metadata:
      labels:
        app: example-runtime
    spec:
      containers:
        - name: example-runtime-kernel
          image: lihebi/codepod-kernel-python:{{ .Chart.AppVersion }}
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"
        - name: example-runtime-ws
          image: lihebi/codepod-runtime:{{ .Chart.AppVersion }}
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"