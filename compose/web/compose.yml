# Use postgres/example user/password credentials
version: "3.5"

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data

  # Run: docker compose up setup
  # Then run: docker compose up -d
  setup:
    image: node:18
    working_dir: /codepod
    depends_on:
      - db
    volumes:
      - ../..:/codepod
      # pnpm-store serves two purposes:
      # 1. without it, pnpm install will throw error. Ref:
      #    https://github.com/pnpm/pnpm/issues/3952#issuecomment-1262136483
      # 2. it is mounted to all service containers, and will cache and speed up
      #    pnpm install and pnpm add/remove
      - pnpm-store:/codepod/.pnpm-store
    command: sh -c "corepack enable && pnpm install && cd packages/prisma && pnpm dlx prisma migrate dev && echo '=== Setup Finished, idling ===' && tail -f /dev/null"
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public"

  prisma:
    image: node:18
    restart: always
    command: sh -c "corepack enable && pnpm dlx prisma studio"
    working_dir: /codepod/packages/prisma
    volumes:
      - ../..:/codepod
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public"

  api:
    image: node:18
    working_dir: /codepod/apps/web-api
    ports:
      - 4000:4000
    volumes:
      - ../..:/codepod
      - pnpm-store:/codepod/.pnpm-store
    command: sh -c "corepack enable && pnpm dev"
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public"
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}

  spawner-native:
    # This image has python and ipykernel installed.
    build:
      context: .
    ports:
      - 4022:4021
    working_dir: /codepod/apps/spawner
    volumes:
      - ../..:/codepod
      - pnpm-store:/codepod/.pnpm-store
    command: bash -c "corepack enable && pnpm dev:native"
    environment:
      KERNEL_TTL: "43200000"
      LOOP_INTERVAL: "60000"
      YJS_WS_URL: "ws://yjs:4233/socket"
      JWT_SECRET: ${JWT_SECRET}

  spawner-docker:
    image: node:18
    working_dir: /codepod/apps/spawner
    ports:
      - 4021:4021
    volumes:
      - ../..:/codepod
      - pnpm-store:/codepod/.pnpm-store
      - /var/run/docker.sock:/var/run/docker.sock
    command: sh -c "corepack enable && pnpm dev:docker"
    environment:
      # Set PROJECT_ROOT to the absolute path of your codepod local repo if you
      # want to debug the runtime code.
      #
      # PROJECT_ROOT: "/path/to/codepod"

      # 1000 * 60 * 3: 3 minutes
      # KERNEL_TTL: "180000"
      # 1000 * 60 * 60 * 12: 12 hours
      KERNEL_TTL: "43200000"
      # 1000 * 5: 5 seconds
      # LOOP_INTERVAL: "5000"
      # 1000 * 60 * 1: 1 minute 
      LOOP_INTERVAL: "60000"
      KERNEL_NETWORK: "codepod"
      ZMQ_KERNEL_IMAGE: "lihebi/codepod-kernel-python:0.4.13-alpha.49"
      WS_RUNTIME_IMAGE: "lihebi/codepod-runtime:0.4.13-alpha.49"
      # spawner need to add routes to proxy server
      # PROXY_API_URL: "http://proxy:4011/graphql"
      YJS_WS_URL: "ws://yjs:4233/socket"
      JWT_SECRET: ${JWT_SECRET}

  yjs:
    image: node:18
    working_dir: /codepod/apps/web-yjs
    ports:
      - 4233:4233
    volumes:
      - ../..:/codepod
      - pnpm-store:/codepod/.pnpm-store
      - /var/run/docker.sock:/var/run/docker.sock
    command: sh -c "corepack enable && pnpm dev"
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public"
      JWT_SECRET: ${JWT_SECRET}

  ui:
    image: node:18
    working_dir: /codepod/apps/web-ui
    ports:
      - 3000:3000
    environment:
      TEST: "123"
      VITE_APP_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      VITE_APP_YJS_WS_URL: "ws://localhost:4233/socket"
      VITE_APP_API_URL: "http://localhost:4000/graphql"
      # Native spawner
      VITE_APP_SPAWNER_API_URL: "http://localhost:4022/graphql"
      # Docker spawner
      # VITE_APP_SPAWNER_API_URL: "http://localhost:4021/graphql"
    volumes:
      - ../..:/codepod
      - pnpm-store:/codepod/.pnpm-store
    command: sh -c "corepack enable && pnpm dev"

  # This container is only used for installing node_modules into the volume, so
  # that the docker spawner can use the image without waiting for installing.
  example-runtime-dev:
    image: node:18
    working_dir: /codepod/apps/runtime
    volumes:
      - ../..:/codepod
      - pnpm-store:/codepod/.pnpm-store
    command: sh -c "corepack enable && pnpm dev"

  example-runtime-prod:
    image: lihebi/codepod-runtime:0.4.13-alpha.49

  # This is only used to download the kernel image, so that the docker spawner
  # can use the image without waiting for downloading.
  example-kernel:
    image: lihebi/codepod-kernel-python:0.4.13-alpha.49

volumes:
  db-data:
  pnpm-store:

networks:
  default:
    name: codepod
    driver: bridge
