"use strict";(self.webpackChunkcodepod_io=self.webpackChunkcodepod_io||[]).push([[216],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(n),h=a,g=c["".concat(l,".").concat(h)]||c[h]||u[h]||r;return n?o.createElement(g,i(i({ref:t},d),{},{components:n})):o.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},4871:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var o=n(7462),a=(n(7294),n(3905));const r={},i="GSoC 2023 Project Ideas",s={unversionedId:"gsoc2023",id:"gsoc2023",title:"GSoC 2023 Project Ideas",description:"CodePod.io is an open-source canvas-based coding IDE that",source:"@site/docs/9-gsoc2023.md",sourceDirName:".",slug:"/gsoc2023",permalink:"/docs/gsoc2023",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Press & Screenshots",permalink:"/docs/press/"},next:{title:"Privacy Policy",permalink:"/docs/Reference/Legal/privacy-policy"}},l={},p=[{value:"Scope-branching Version Control System (VCS)",id:"scope-branching-version-control-system-vcs",level:2},{value:"Scope-based function-level CI/CD",id:"scope-based-function-level-cicd",level:2},{value:"Scope-aware language kernels for Javascript, Julia, and Racket.",id:"scope-aware-language-kernels-for-javascript-julia-and-racket",level:2},{value:"React Jupyter/CodePod kernels",id:"react-jupytercodepod-kernels",level:2},{value:"A scope-based extension system and APIs",id:"a-scope-based-extension-system-and-apis",level:2},{value:"Auto-layout of code cells and scope boxes",id:"auto-layout-of-code-cells-and-scope-boxes",level:2},{value:"Cross-language runtime",id:"cross-language-runtime",level:2},{value:"Integration test and automatic unit-test generation",id:"integration-test-and-automatic-unit-test-generation",level:2},{value:"Breakpoint support in code pods",id:"breakpoint-support-in-code-pods",level:2},{value:"Importing and exporting between Codepod and local formats, especially Jupyter notebooks and Python scripts",id:"importing-and-exporting-between-codepod-and-local-formats-especially-jupyter-notebooks-and-python-scripts",level:2},{value:"Properly detailed contextual zoom with minimap/toc navigation",id:"properly-detailed-contextual-zoom-with-minimaptoc-navigation",level:2},{value:"CodePod-based collaborative documentation and publishing",id:"codepod-based-collaborative-documentation-and-publishing",level:2},{value:"Comment and suggest edits",id:"comment-and-suggest-edits",level:2}],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"gsoc-2023-project-ideas"},"GSoC 2023 Project Ideas"),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"http://CodePod.io"},"CodePod.io")," is an open-source canvas-based coding IDE that\nhelps programmers develop large, production-ready projects faster by presenting\ninteractive coding (e.g., Jupyter) on a hierarchical, scoped, 2D canvas. Without\ncode modularization (traditionally done via organizing text files under\ntree-structured folder hierarchies), a Jupyter notebook can easily become messy,\ndifficult to manage and scale. Alleviating such limitations, CodePod was born to\nbump interactive coding beyond prototyping and demos. Our website is\n",(0,a.kt)("a",{parentName:"p",href:"https://codepod.io"},"https://codepod.io"),". More details are in our paper:\n",(0,a.kt)("a",{parentName:"p",href:"https://arxiv.org/abs/2301.02410"},"https://arxiv.org/abs/2301.02410")),(0,a.kt)("p",null,"We are a VC-backed startup dedicated to open-source development tools. Both of\nthe co-founders will be available as a mentor."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Hebi (CEO, potential GSoC mentor) is an ex-Google Brainer and ex-ByteDancer\nwith 10 years of AI and PL research experience. He is also A Ph.D. candidate at\nIowa State University. Homepage: ",(0,a.kt)("a",{parentName:"li",href:"https://lihebi.com"},"https://lihebi.com")),(0,a.kt)("li",{parentName:"ul"},"Forrest (CPO) is a CS Prof. at Iowa State Univ. Reported by MIT Tech Review,\nLancet Neurology, and NYTimes. Homepage:\n",(0,a.kt)("a",{parentName:"li",href:"https://forrestbao.github.io/"},"https://forrestbao.github.io/"))),(0,a.kt)("h1",{id:"idea-list"},"Idea list"),(0,a.kt)("h2",{id:"scope-branching-version-control-system-vcs"},"Scope-branching Version Control System (VCS)"),(0,a.kt)("p",null,"Detailed Description: Traditional version control systems work only on files and\nmanage an entire repo as a whole. VCS has always been a challenge in\ncomputational notebooks as there are no longer files. CodePod\u2019s unique nested\nscope canvas offers an opportunity to develop a finer-grained VCS by branching\nat the scope level, instead of the repo level. In particular, users can create a\nbranch for any scope, and others can pull and merge the branch or switch\nrevisions. In addition (optional for this project), we\u2019d like to support\ncollaborative editing and VCS at the same time to further improve the\neffectiveness of teamwork."),(0,a.kt)("p",null,"Expected Outcomes: a version control system that can create branches on the\nScoped code cells. Should support branching, merging, and conflict-resolving\noperations. Users can track changes and view the diff for each pod."),(0,a.kt)("p",null,"Skills required/preferred: Javascript/Typescript, React, GraphQL, WebSocket,\nPython"),(0,a.kt)("p",null,"Possible Mentors: Hebi Li"),(0,a.kt)("p",null,"The expected size of the project: 350 hrs"),(0,a.kt)("p",null,"Rating: hard"),(0,a.kt)("h2",{id:"scope-based-function-level-cicd"},"Scope-based function-level CI/CD"),(0,a.kt)("p",null,"Detailed Description: Traditional CI/CD pipeline assumes heavily on file-based\nautomation. But in interactive coding, there are no files but only snippets of\ncode (code cells). CodePod\u2019s unique nested scope canvas offers yet another\nopportunity to develop a function-level CI/CD pipeline. The pipelines should be\ntightly integrated with the Canvas system."),(0,a.kt)("p",null,"Expected Outcomes: a CI/CD pipeline that can be triggered by releasing or\nexporting. The pipeline should be function-level, for example, triggering a unit\ntest of a function defined in a code pod."),(0,a.kt)("p",null,"Skills required/preferred: Javascript/Typescript, React, GraphQL, WebSocket,\nPython"),(0,a.kt)("p",null,"Possible Mentors: Hebi Li"),(0,a.kt)("p",null,"The expected size of the project: 350 hrs"),(0,a.kt)("p",null,"Rating: hard"),(0,a.kt)("h2",{id:"scope-aware-language-kernels-for-javascript-julia-and-racket"},"Scope-aware language kernels for Javascript, Julia, and Racket."),(0,a.kt)("p",null,"Detailed Description: CodePod features a novel language-agnostic module system\nthat supports scope-based Encapsulation. The module system manages the symbol\ntable above the language runtime. Thus, in order to support other programming\nlanguages, a parser is expected to be built."),(0,a.kt)("p",null,"Expected Outcomes: an option to choose which language\u2019s kernel to launch.\nDevelop scope-aware kernels for Javascript, Julia, and Racket."),(0,a.kt)("p",null,"Skills required/preferred: Javascript/Typescript, React, GraphQL, WebSocket,\nPython, tree-sitter, compiler, parser"),(0,a.kt)("p",null,"Possible Mentors: Hebi Li"),(0,a.kt)("p",null,"The expected size of the project: 175 hrs"),(0,a.kt)("p",null,"Rating: medium"),(0,a.kt)("h2",{id:"react-jupytercodepod-kernels"},"React Jupyter/CodePod kernels"),(0,a.kt)("p",null,"Detailed Description: Front-end development often relies on frameworks such as\nReact. Although the Javascript kernel for Jupyter exists, it is impossible to\ndevelop React apps in Jupyter due to the lack of package bundler support, e.g.,\nwebpack. Interactive development can be very useful for front-end development\nthanks to the visualization capability. Thus, it is desired to develop React\nkernels for Jupyter and CodePod, respectively."),(0,a.kt)("p",null,"Expected Outcomes: a React kernel for Jupyter that derives from Javascript\nkernel, but with webpack support."),(0,a.kt)("p",null,"Skills required/preferred: Javascript/Typescript, React, GraphQL, WebSocket,\nPython"),(0,a.kt)("p",null,"Possible Mentors: Hebi Li"),(0,a.kt)("p",null,"The expected size of the project: 350 hrs"),(0,a.kt)("p",null,"Rating: hard"),(0,a.kt)("h2",{id:"a-scope-based-extension-system-and-apis"},"A scope-based extension system and APIs"),(0,a.kt)("p",null,"Detailed Description: Extension is a great way to introduce additional\nfunctionality for a platform, e.g. the extensions and marketplace of VSCode.\nCodePod has a unique scope-based canvas interface, we would like to define and\nimplement an extension system and APIs."),(0,a.kt)("p",null,"Expected Outcomes: An extension system and APIs for extending CodePod. Demo\nextensions: auto-completion, chatGPT integration, theming."),(0,a.kt)("p",null,"Skills required/preferred: Javascript/Typescript, React, GraphQL, WebSocket,\nPython"),(0,a.kt)("p",null,"Possible Mentors: Hebi Li"),(0,a.kt)("p",null,"The expected size of the project: 350 hrs"),(0,a.kt)("p",null,"Rating: medium"),(0,a.kt)("h2",{id:"auto-layout-of-code-cells-and-scope-boxes"},"Auto-layout of code cells and scope boxes"),(0,a.kt)("p",null,"Detailed Description: Currently, the cell/scope layout is done manually. It is\npretty tedious and time-consuming. An automated layout algorithm will let\nprogrammers focus on coding. It analyzes the code snippets to figure out the\ndependencies between the cells and scopes, and implement various auto-layout\nalgorithms present the program structure clearly. Dependencies include the call\ngraph, data dependency, execution order, arrow-based importing, and manually\ndefined order."),(0,a.kt)("p",null,"Expected Outcomes: a call-graph and data-dependency analyzer and a set of\nauto-layout algorithms."),(0,a.kt)("p",null,"Skills required/preferred: Javascript/Typescript, React, GraphQL, WebSocket,\nPython, compiler, parser"),(0,a.kt)("p",null,"Possible Mentors: Hebi Li, Forrest Bao"),(0,a.kt)("p",null,"The expected size of the project: 350 hrs"),(0,a.kt)("p",null,"Rating: hard"),(0,a.kt)("p",null,"Potentially separate into two projects:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"DAG dependency semantic implementation"),(0,a.kt)("li",{parentName:"ul"},"Auto-layout")),(0,a.kt)("h2",{id:"cross-language-runtime"},"Cross-language runtime"),(0,a.kt)("p",null,"Detailed Description: Different programming languages have different features\nand different library ecosystems. Thus, it is very attractive if the functions\nof different programming languages can call each other. This need is especially\nuseful in CodePod where the smallest coding unit is a function instead of a\nfile. Here, the goal is to implement cross-language runtime calls by serializing\nand standardizing input/output into ProtoBuffer."),(0,a.kt)("p",null,"Expected Outcomes: a cross-language runtime that supports calling functions\nimplemented in other languages."),(0,a.kt)("p",null,"Skills required/preferred: Javascript/Typescript, React, GraphQL, WebSocket,\nPython"),(0,a.kt)("p",null,"Possible Mentors: Hebi Li"),(0,a.kt)("p",null,"The expected size of the project: 350 hrs"),(0,a.kt)("p",null,"Rating: hard"),(0,a.kt)("h2",{id:"integration-test-and-automatic-unit-test-generation"},"Integration test and automatic unit-test generation"),(0,a.kt)("p",null,"Detailed Description: Testing is essential for software development. This\nproject adds both integration tests and unit tests. In addition, we envision\nthree important features:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"abstract unit test modules over different programming languages."),(0,a.kt)("li",{parentName:"ol"},"UI and pipeline support in Canvas and scope-based interface."),(0,a.kt)("li",{parentName:"ol"},"Automatic unit tests generation. Unit tests are expensive to write and\nmaintain. Thus, we would like to automatically generate unit tests from\nintegration test runs by recording` the input/output of the functions.")),(0,a.kt)("p",null,"Expected Outcomes: a testing framework that allows users to write and run\nintegration tests and unit tests; an engine to automatically generate unit tests\nfrom integration tests."),(0,a.kt)("p",null,"Skills required/preferred: Javascript/Typescript, React, GraphQL, WebSocket,\nPython"),(0,a.kt)("p",null,"Possible Mentors: Hebi Li"),(0,a.kt)("p",null,"The expected size of the project: 350 hrs"),(0,a.kt)("p",null,"Rating: medium"),(0,a.kt)("h2",{id:"breakpoint-support-in-code-pods"},"Breakpoint support in code pods"),(0,a.kt)("p",null,"Detailed Description: Jupyter-style interactive coding is intuitive for\ndebugging. However, traditional breakpoint-based debugging is still useful for\ndebugging the internal logic inside a function, e.g., inspecting the variables\ninside the loops. This project aims to support adding breakpoints in CodePod\u2019s\ncode editor and implements actions such as step-into, step-out, and step-over.\nJupyter already has it, so we\u2019d probably just adapt it for CodePod.\n",(0,a.kt)("a",{parentName:"p",href:"https://jupyterlab.readthedocs.io/en/latest/user/debugger.html"},"https://jupyterlab.readthedocs.io/en/latest/user/debugger.html")),(0,a.kt)("p",null,"Expected Outcomes: allowing users to set breakpoints in the code editor at any\nline, and enabling step-into, step-out, and step-over actions."),(0,a.kt)("p",null,"Skills required/preferred: Javascript/Typescript, React, GraphQL, WebSocket,\nPython"),(0,a.kt)("p",null,"Possible Mentors: Hebi Li, Forrest Bao"),(0,a.kt)("p",null,"The expected size of the project: 175 hrs"),(0,a.kt)("p",null,"Rating: easy"),(0,a.kt)("h2",{id:"importing-and-exporting-between-codepod-and-local-formats-especially-jupyter-notebooks-and-python-scripts"},"Importing and exporting between Codepod and local formats, especially Jupyter notebooks and Python scripts"),(0,a.kt)("p",null,"Detailed Description: The goal here is to allow the conversion between CodePod\nand other formats to help users migrate between them and backup projects\nlocally. When exporting to Jupyter notebooks or Python scripts, users will be\nasked to choose an ordering criterion, e.g., the return of an external function\nbased on the call graph or the data dependency, the execution order, or the\nuser-assigned order, to map code cells hierarchically located on a 2D canvas to\na linear order. Pickling and loading a Codepod project to and from a local copy\nshall also be supported."),(0,a.kt)("p",null,"Expected Outcomes: an importer and an exporter between Codepod and its own local\nopen format, Jupyter notebooks (",(0,a.kt)("inlineCode",{parentName:"p"},"*.ipynb"),"), Python scripts (",(0,a.kt)("inlineCode",{parentName:"p"},"*.py"),"), HTML\n(exporter only), Markdown (exporter only) and PDF (exporter only). When\nexporting, three ordering schemes shall be supported: calling an external\nfunction, sorting cells based on execution order, and using user-assigned order."),(0,a.kt)("p",null,"Skills required/preferred: Javascript/Typescript, Python, React, GraphQL"),(0,a.kt)("p",null,"Possible Mentors: Forrest Bao, Hebi Li"),(0,a.kt)("p",null,"The expected size of the project: 175 hrs"),(0,a.kt)("p",null,"Rating: Easy"),(0,a.kt)("h2",{id:"properly-detailed-contextual-zoom-with-minimaptoc-navigation"},"Properly detailed contextual zoom with minimap/toc navigation"),(0,a.kt)("p",null,"Detailed Description: CodePod makes the structure of code clear thanks to its\nbuilt-in visualization. This project improves CodePod\u2019s visualization capability\nto the next level. In particular, we need to show users just the right amount of\ninformation, verbose details shall be collapsed properly upon zooming out.\nBesides, since code cells are laid out 2D, a new way is needed to visualize\ntheir orders, e.g., via arrows. The order can be manually assigned by a user\n(e.g., drag and draw) or by an external function (e.g., analyzing the call graph\nor data dependency). Lastly, a minimap is desired to show users an overview of\nwhere we are and can navigate to the right code & scope through ToC jumping."),(0,a.kt)("p",null,"Expected Outcomes: Storing and retrieving the ordering information to and from\nthe database and visualizing the ordering in arrows using React-flow; allowing\nusers to assign orders to cells via drawing arrows in CodePod\u2019s frontend and\nsaving the user-assigned orders to the database; selectively visualizing\nupstream and downstream nodes of a selected cell"),(0,a.kt)("p",null,"Skills required/preferred: Javascript/Typescript, SQL, React, React-flow,\nGraphQL"),(0,a.kt)("p",null,"Possible mentors: Forrest Bao, Hebi Li"),(0,a.kt)("p",null,"The expected size of project: 350 hrs"),(0,a.kt)("p",null,"Rating: Hard"),(0,a.kt)("h2",{id:"codepod-based-collaborative-documentation-and-publishing"},"CodePod-based collaborative documentation and publishing"),(0,a.kt)("p",null,"Detailed description: When code cells are all in Markdown or LaTeX or even plain\ntext, CodePod becomes a new documentation or publishing tool: the hierarchy of\ntexts is visualized in 2D rather than using fonts or indentations in a\nconventional way. The goal here is to add collaborative features to CodePod and\nto publish CodePod-made documents into interactive web pages."),(0,a.kt)("p",null,"Expected outcomes: Change tracker and comment (bubbles, not programming\nlanguage\u2019s comments) in Codepod, collapsing and expanding scopes into and from\nthumbnail icons, semantic search in the text (as easy as using sentence-bert)\nwith results highlighted and jumpable."),(0,a.kt)("p",null,"Skills required/preferred: Javascript/Typescript, HTML, React, React-flow"),(0,a.kt)("p",null,"Possible mentors: Forrest Bao, Hebi Li"),(0,a.kt)("p",null,"The expected size of project: 175 hrs"),(0,a.kt)("p",null,"Rating: Easy"),(0,a.kt)("h2",{id:"comment-and-suggest-edits"},"Comment and suggest edits"),(0,a.kt)("p",null,"Detailed description: Online collaboration has been widely used in team working.\nWhen we collaborate on document writing on Google docs, two features have been\nshown to be useful: the comment and reply system, and the suggest editing where\nothers can review and accept or reject the suggestions. We believe such\ncollaboration features will boost the productivity of software development as\nwell. This project adds comments and suggests edits features to CodePod."),(0,a.kt)("p",null,"Expected outcomes: Users can select some text or node and add a comment; team\nmembers can reply and resolve the comment. Users can also toggle on the\n\u201csuggests edits\u201d switch, and the edits will become a suggestion marked with a\ndifferent color. Other users can leave comments and decide to accept or reject\nthe suggestions."),(0,a.kt)("p",null,"Skills required/preferred: Javascript/Typescript, HTML, React, React-flow"),(0,a.kt)("p",null,"Possible mentors: Forrest Bao, Hebi Li"),(0,a.kt)("p",null,"The expected size of project: 175 hrs"),(0,a.kt)("p",null,"Rating: Easy"))}u.isMDXComponent=!0}}]);